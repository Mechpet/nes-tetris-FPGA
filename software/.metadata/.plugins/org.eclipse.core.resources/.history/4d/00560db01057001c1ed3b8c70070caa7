/*
 * vga.h
 * Based on Zuofu Cheng's text_mode_vga.h
 *
 *  Created on: Nov 17, 2021
 *      Author: thoms
 */

#ifndef VGA_H_
#define VGA_H_

#include <system.h>
#include <alt_types.h>

#define RESERVE_LENGTH 2022


#define BOARD_ROWS 20
#define BOARD_COLS 10

#define BOARD_TOP 0
#define BOARD_BOTTOM 19
#define BOARD_LEFT_EDGE 0
#define BOARD_RIGHT_EDGE 9

#define WHITE_MASK 0b11
#define LIGHT_MASK 0b10
#define DARK_MASK 0b01
#define BLACK_MASK 0b00
#define ROW_1_MASK 0x00003	// Row 1 block mask
#define ROW_2_MASK 0x0000F // Row 2 adjacent blocks mask
#define ROW_4_MASK 0x000FF // Row 4 adjacent blocks mask
#define ROW_10_MASK 0x000FFFFF // Row 10 adjacent blocks mask
#define GAMEOVER_MASK 0x00100000

#define O_PIECE 0
#define I_PIECE 1
#define Z_PIECE 2
#define S_PIECE 3
#define T_PIECE 4
#define J_PIECE 5
#define L_PIECE 6
#define INITIAL 0
#define CW 1
#define INITIAL_FLIPPED 2
#define CCW 3

#define TEST_PIECE O_PIECE

struct VGA_STRUCT {
	alt_u32 LEVEL_LINES;
	alt_u32 SCORE;
	alt_u32 BOARD[20];
	alt_u32 NEXT;
	alt_u32 FRAME;
	alt_u32 DELAY;
	alt_u32 LINES_CLEARED;
	alt_u32 RESERVED[RESERVE_LENGTH];
	alt_u32 PALETTE;
	alt_u32 WINDOW;
	alt_u32 SEED;
	alt_u32 ASSERTION;
};

static volatile struct VGA_STRUCT *vga_ctrl = VGA_CONTROLLER_0_BASE;

enum bool {
	ILLEGAL,
	LEGAL,
};

struct COLOR{
	char name [20];
	alt_u8 red;
	alt_u8 green;
	alt_u8 blue;
};

struct piece {
	int row[4];
	int col[4];
	unsigned type : 3;
	unsigned orient : 2;
} present, future;

struct row {
	alt_u8 data[10];
};

static struct COLOR colors[]={
    {"black",          0x0, 0x0, 0x0},
	{"blue",           0x0, 0x0, 0xa},
    {"green",          0x0, 0xa, 0x0},
	{"cyan",           0x0, 0xa, 0xa},
    {"red",            0xa, 0x0, 0x0},
	{"magenta",        0xa, 0x0, 0xa},
    {"brown",          0xa, 0x5, 0x0},
	{"light gray",     0xa, 0xa, 0xa},
    {"dark gray",      0x5, 0x5, 0x5},
	{"light blue",     0x5, 0x5, 0xf},
    {"light green",    0x5, 0xf, 0x5},
	{"light cyan",     0x5, 0xf, 0xf},
    {"light red",      0xf, 0x5, 0x5},
	{"light magenta",  0xf, 0x5, 0xf},
    {"yellow",         0xf, 0xf, 0x5},
	{"white",          0xf, 0xf, 0xf}
};

// Functional category:
void vga_clear();
void increase_level();
void step_lines(alt_u8 step);
void set_palette(alt_u8 new_red1, alt_u8 new_green1, alt_u8 new_blue1, alt_u8 new_red2, alt_u8 new_green2, alt_u8 new_blue2);
void initial_spawn_piece();
void fetch_next_piece();
void spawn_next_piece();
void drop_curr_piece();
struct piece assemble_piece(alt_u32 piece_memory);
enum bool is_legal_world(struct piece new_piece);
void fill_board(struct piece curr_piece);
void game_over_sequence();
alt_u8 random_piece();

// Test category:
void test_inc_level_line_values();
void test_inc_level_line_values2();
void test_score_values();
void test_board_values();
void test_spawn_next_piece();

#endif /* VGA_H_ */
